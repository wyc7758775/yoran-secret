import{_ as k,I as h,c as e,o as r,j as t,J as l,a as i,be as p,w as n}from"./chunks/framework.Bc3g4bdh.js";const M=JSON.parse('{"title":"使用 Composition API 实战经验","description":"","frontmatter":{},"headers":[],"relativePath":"posts/最佳实践/使用composition api实践经验.md","filePath":"posts/最佳实践/使用composition api实践经验.md"}'),E={name:"posts/最佳实践/使用composition api实践经验.md"},d={id:"一、为什么组件越开发越难维护",tabindex:"-1"},g={id:"_1-1-vue2-的项目现状",tabindex:"-1"},o={id:"_1-2-composition-api-带来什么改进呢",tabindex:"-1"},y={id:"更好的逻辑服用",tabindex:"-1"},u={id:"更灵活的代码组织",tabindex:"-1"},F={id:"额外的作用",tabindex:"-1"},b={id:"_1-3-业务变量和-ui-变量的混用",tabindex:"-1"},f={id:"_1-4-对于单个业务组件我们的理想模型",tabindex:"-1"},C={id:"二、实际的例子",tabindex:"-1"},_={id:"_2-1-数据流向",tabindex:"-1"},A={id:"_2-2-目录结构",tabindex:"-1"},D={id:"index-tsx",tabindex:"-1"},m={id:"_2-3-modaledit",tabindex:"-1"},B={id:"_2-4-权限控制例子",tabindex:"-1"},v={id:"三、持续的优化",tabindex:"-1"},T={id:"_3-1-有了-setup-就足够了么",tabindex:"-1"},x={id:"_3-2-持续的优化和阶段性的重构才是根本",tabindex:"-1"};function S(P,s,I,q,V,N){const a=h("font");return r(),e("div",null,[s[208]||(s[208]=t("h1",{id:"使用-composition-api-实战经验",tabindex:"-1"},[i("使用 Composition API 实战经验 "),t("a",{class:"header-anchor",href:"#使用-composition-api-实战经验","aria-label":"Permalink to “使用 Composition API 实战经验”"},"​")],-1)),s[209]||(s[209]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006140571-694fd4fa-87b2-45b6-90d8-7b70304141c8.png",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[0]||(s[0]=[i("Composition api 出来之后，我们除了要学习它的 API 之后，更加要学习他为什么要这样设计。",-1)])),_:1,__:[0]}),t("h2",d,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[1]||(s[1]=[i("一、为什么组件越开发越难维护",-1)])),_:1,__:[1]}),s[2]||(s[2]=i()),s[3]||(s[3]=t("a",{class:"header-anchor",href:"#一、为什么组件越开发越难维护","aria-label":"Permalink to “一、为什么组件越开发越难维护”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[4]||(s[4]=[i("在讨论组件为什么越来越难以维护，本质是在讨论，",-1)])),_:1,__:[4]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[5]||(s[5]=[i("compostion-api",-1)])),_:1,__:[5]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[6]||(s[6]=[i("的抛出是为什么解决什么问题？我们学习一个框架，除了要学习它的 API 之外，更重要的是学习它的 API 为什么要这么设计。",-1)])),_:1,__:[6]}),t("h3",g,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[7]||(s[7]=[i("1.1 vue2 的项目现状",-1)])),_:1,__:[7]}),s[8]||(s[8]=i()),s[9]||(s[9]=t("a",{class:"header-anchor",href:"#_1-1-vue2-的项目现状","aria-label":"Permalink to “1.1 vue2 的项目现状”"},"​",-1))]),s[210]||(s[210]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006140467-87e7fea2-1339-40a2-ab38-8e5207134749.png",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[10]||(s[10]=[i("以该图为例, A B C 分别是父子孙组件.",-1)])),_:1,__:[10]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[11]||(s[11]=[i("当我们要控制其中一个组件的状态的是, 可以通过很多方式来进行控制. 这些方式的来源有可能是",-1)])),_:1,__:[11]}),s[211]||(s[211]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[12]||(s[12]=[i("全局变量",-1)])),_:1,__:[12]}),s[212]||(s[212]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[13]||(s[13]=[i("、",-1)])),_:1,__:[13]}),s[213]||(s[213]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[14]||(s[14]=[i("vuex",-1)])),_:1,__:[14]}),s[214]||(s[214]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[15]||(s[15]=[i("、事件",-1)])),_:1,__:[15]}),s[215]||(s[215]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[16]||(s[16]=[i("总线",-1)])),_:1,__:[16]}),s[216]||(s[216]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[17]||(s[17]=[i("、以及",-1)])),_:1,__:[17]}),s[217]||(s[217]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[18]||(s[18]=[i("自己父组件或子组件的改变",-1)])),_:1,__:[18]}),s[218]||(s[218]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[19]||(s[19]=[i("等等。",-1)])),_:1,__:[19]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[20]||(s[20]=[i("可以看出, 改变它组件内部状态的来源非常的多, 维护或者修改的时候,需要翻阅的文件目录和范围就很广。更不用说当你发现同样的逻辑在别的地方可以共用的时候，抽离的心智成本自然是很高的。 自然就很难维护。这就是典型的",-1)])),_:1,__:[20]}),s[219]||(s[219]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[21]||(s[21]=[i("意大利面现象",-1)])),_:1,__:[21]}),s[220]||(s[220]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[22]||(s[22]=[i("。",-1)])),_:1,__:[22]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[23]||(s[23]=[i("当你想要进行逻辑复用的话，不要就是 mixins，要不就是 HOC。下面举一个 mixins 的例子：",-1)])),_:1,__:[23]}),s[221]||(s[221]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[24]||(s[24]=[i("这个",-1)])),_:1,__:[24]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[25]||(s[25]=[i("this.whoAreYou",-1)])),_:1,__:[25]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[26]||(s[26]=[i("你能够知道来源于哪一个么？如果这个组件还使用了 HOC 高阶组件的话，会更加的混乱的。",-1)])),_:1,__:[26]}),t("h3",o,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[27]||(s[27]=[i("1.2 composition api 带来什么改进呢？",-1)])),_:1,__:[27]}),s[28]||(s[28]=i()),s[29]||(s[29]=t("a",{class:"header-anchor",href:"#_1-2-composition-api-带来什么改进呢","aria-label":"Permalink to “1.2 composition api 带来什么改进呢？”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[30]||(s[30]=[i("下面是",-1)])),_:1,__:[30]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[31]||(s[31]=[i("script setup",-1)])),_:1,__:[31]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[32]||(s[32]=[i("官方给出它其中的两个优点：",-1)])),_:1,__:[32]}),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[33]||(s[33]=[i("更好的逻辑服用",-1)])),_:1,__:[33]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[34]||(s[34]=[i("更灵活的代码组织",-1)])),_:1,__:[34]}),s[35]||(s[35]=t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006140527-5fa27bcf-548f-4bd9-a46e-d32992682b09.png",alt:""},null,-1))]),t("li",null,[t("s",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[36]||(s[36]=[i("更好的 ts 支持",-1)])),_:1,__:[36]})])]),t("li",null,[t("s",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[37]||(s[37]=[i("更小的打包体积",-1)])),_:1,__:[37]})])])]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[38]||(s[38]=[i("下面我来给大家看看实际项目中都是怎么体现出来的。",-1)])),_:1,__:[38]}),t("h4",y,[t("strong",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[39]||(s[39]=[i("更好的逻辑服用",-1)])),_:1,__:[39]})]),s[40]||(s[40]=i()),s[41]||(s[41]=t("a",{class:"header-anchor",href:"#更好的逻辑服用","aria-label":"Permalink to “更好的逻辑服用”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[42]||(s[42]=[i("这个",-1)])),_:1,__:[42]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[43]||(s[43]=[i("this.whoAreYou",-1)])),_:1,__:[43]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[44]||(s[44]=[i("你能够知道来源于哪一个么？如果使用了",-1)])),_:1,__:[44]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[45]||(s[45]=[i("composition api",-1)])),_:1,__:[45]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[46]||(s[46]=[i("的话，是下面这样：",-1)])),_:1,__:[46]}),s[222]||(s[222]=p("",2)),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[47]||(s[47]=[i("一切都变得很明朗，我可以非常清楚的知道这个方法的来源。维护和可读性都极大的提高了",-1)])),_:1,__:[47]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[48]||(s[48]=[i("还可以取别名",-1)])),_:1,__:[48]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[49]||(s[49]=[i("没有创建仅用于逻辑重用的不必要的组件实例。",-1)])),_:1,__:[49]})])]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[50]||(s[50]=[i("composition-api 的书写流程大概就是把可以复用的状态和行为抽成函数，然后在 set up 标签里面引入并执行。如果我们把每个组件也看做一个函数的话，大概就是下面这个意思：",-1)])),_:1,__:[50]}),s[223]||(s[223]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[51]||(s[51]=[i("因为我们的业务中，对每个组件都要进行一些通用的操作，比如打印日志，设置 document.title，配置权限等等，在 composition-api 的背景下，差不多应该这么做：",-1)])),_:1,__:[51]}),s[224]||(s[224]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[52]||(s[52]=[i("如果这些是每一个组件的通用组件，我们又可以怎么使用呢？在 option api 的时代，我使用",-1)])),_:1,__:[52]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[53]||(s[53]=[i("extend",-1)])),_:1,__:[53]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[54]||(s[54]=[i("来实现：",-1)])),_:1,__:[54]}),s[225]||(s[225]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[55]||(s[55]=[i("那么每次我只需要 extends 这个 BaseComponent 即可，并不要每次都写执行它们的流程。",-1)])),_:1,__:[55]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[56]||(s[56]=[i("而 hook 的写法更加直接。",-1)])),_:1,__:[56]}),s[226]||(s[226]=p("",2)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[57]||(s[57]=[i("写法就是将函数作为函数的参数，毕竟在 JS 中函数是一等公民，这是 JS 能够实现函数式范式的基础。展开代码如下：",-1)])),_:1,__:[57]}),s[227]||(s[227]=p("",1)),t("h4",u,[t("strong",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[58]||(s[58]=[i("更灵活的代码组织",-1)])),_:1,__:[58]})]),s[59]||(s[59]=i()),s[60]||(s[60]=t("a",{class:"header-anchor",href:"#更灵活的代码组织","aria-label":"Permalink to “更灵活的代码组织”"},"​",-1))]),s[228]||(s[228]=p("",2)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[61]||(s[61]=[i("代码更加的干净。而这个干净的感觉就是体现在将三个变量的定义都给藏进了",-1)])),_:1,__:[61]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[62]||(s[62]=[i("useSWR",-1)])),_:1,__:[62]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[63]||(s[63]=[i("之中。",-1)])),_:1,__:[63]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[64]||(s[64]=[i("那这个和抽离出去一个函数有什么不同呢？",-1)])),_:1,__:[64]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[65]||(s[65]=[i("这就是它一个关键的地方。",-1)])),_:1,__:[65]}),t("p",null,[t("strong",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[66]||(s[66]=[i("composition-api 本质上它带来的组件逻辑的抽离和复用。根本上来说，就是我们可以让响应式变量单独抽离出去了，",-1)])),_:1,__:[66]}),s[67]||(s[67]=i("**",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[68]||(s[68]=[i("ref",-1)])),_:1,__:[68]}),s[75]||(s[75]=i("*",-1)),t("strong",null,[s[70]||(s[70]=i("*",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[69]||(s[69]=[i("和",-1)])),_:1,__:[69]}),s[71]||(s[71]=i("**",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[72]||(s[72]=[i("reactive",-1)])),_:1,__:[72]}),s[76]||(s[76]=i("*",-1)),t("strong",null,[s[74]||(s[74]=i("*",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[73]||(s[73]=[i("。",-1)])),_:1,__:[73]})])]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[77]||(s[77]=[i("data、fullName, loading",-1)])),_:1,__:[77]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[78]||(s[78]=[i("是可以直接作用于视图的。",-1)])),_:1,__:[78]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[79]||(s[79]=[i("在",-1)])),_:1,__:[79]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[80]||(s[80]=[i("composition-api",-1)])),_:1,__:[80]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[81]||(s[81]=[i("之前，只能通过",-1)])),_:1,__:[81]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[82]||(s[82]=[i("mixins",-1)])),_:1,__:[82]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[83]||(s[83]=[i("和",-1)])),_:1,__:[83]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[84]||(s[84]=[i("vuex",-1)])),_:1,__:[84]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[85]||(s[85]=[i("来实现。",-1)])),_:1,__:[85]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[86]||(s[86]=[i("文档中提出了一个尖锐的灵魂之问，你作为一个新接手的开发人员，能够在茫茫的",-1)])),_:1,__:[86]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[87]||(s[87]=[i("method",-1)])),_:1,__:[87]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[88]||(s[88]=[i("、",-1)])),_:1,__:[88]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[89]||(s[89]=[i("data",-1)])),_:1,__:[89]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[90]||(s[90]=[i("、",-1)])),_:1,__:[90]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[91]||(s[91]=[i("computed",-1)])),_:1,__:[91]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[92]||(s[92]=[i("等选项中一目了然的发现这个变量是属于哪个功能吗？比如「创建新文件夹」功能使用了两个数据属性，一个计算属性和一个方法，其中该方法在距数据属性「一百行以上」的位置定义。",-1)])),_:1,__:[92]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[93]||(s[93]=[i("当一个组价中，维护同一个逻辑需要跨越上百行的「空间距离」的时候，即使是让我去维护 Vue 官方团队的代码，我也会暗搓搓的吐槽一句，「这写的什么玩意，这变量干嘛用的！」",-1)])),_:1,__:[93]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[94]||(s[94]=[i("vue 是一个只负责视图的库。MVVC，我们负责 M 和写好 V，至于为什么我们改变了 M，V 就会有相应的变化，那就是 VC 干的事情了，即 Vue 库的工作了。",-1)])),_:1,__:[94]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[95]||(s[95]=[i("基于「逻辑功能」去组织代码，而不是",-1)])),_:1,__:[95]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[96]||(s[96]=[i("state",-1)])),_:1,__:[96]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[97]||(s[97]=[i("放在一块，",-1)])),_:1,__:[97]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[98]||(s[98]=[i("method",-1)])),_:1,__:[98]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[99]||(s[99]=[i("放在一块，这样和用 Vue2 没什么本质上的区别。",-1)])),_:1,__:[99]}),s[229]||(s[229]=p("",2)),t("h4",F,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[100]||(s[100]=[i("额外的作用",-1)])),_:1,__:[100]}),s[101]||(s[101]=i()),s[102]||(s[102]=t("a",{class:"header-anchor",href:"#额外的作用","aria-label":"Permalink to “额外的作用”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[103]||(s[103]=[i("代码行数减少。",-1)])),_:1,__:[103]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[104]||(s[104]=[i("这些就是 composition-api 带来的变化。除此之外呢？让我组件变成混乱的还有一点：",-1)])),_:1,__:[104]}),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[105]||(s[105]=[i("业务变量和 UI 变量的混用",-1)])),_:1,__:[105]})])]),t("h3",b,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[106]||(s[106]=[i("1.3 业务变量和 UI 变量的混用",-1)])),_:1,__:[106]}),s[107]||(s[107]=i()),s[108]||(s[108]=t("a",{class:"header-anchor",href:"#_1-3-业务变量和-ui-变量的混用","aria-label":"Permalink to “1.3 业务变量和 UI 变量的混用”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[109]||(s[109]=[i("举一个例子, 在上面的目录中",-1)])),_:1,__:[109]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[110]||(s[110]=[i("dialog 组件",-1)])),_:1,__:[110]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[111]||(s[111]=[i("的显示或隐藏,是通过",-1)])),_:1,__:[111]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[112]||(s[112]=[i("model-value / v-model",-1)])),_:1,__:[112]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[113]||(s[113]=[i("来进行控制的,",-1)])),_:1,__:[113]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[114]||(s[114]=[i("true",-1)])),_:1,__:[114]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[115]||(s[115]=[i("就显示,",-1)])),_:1,__:[115]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[116]||(s[116]=[i("false",-1)])),_:1,__:[116]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[117]||(s[117]=[i("就隐藏起来. 下面是我们实际项目中的代码，这样的写法很多，很多。",-1)])),_:1,__:[117]}),s[230]||(s[230]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[118]||(s[118]=[i("通过通过接口拿到的,或者自己组件的数据传进来之后,再进行对 v-model 的控制. data.id 这样的变量就是业务变量, 通过业务变量来直接控制 UI 的组件的显示和隐藏,就是业务变量和 UI 变量的混用. 或者说",-1)])),_:1,__:[118]}),s[231]||(s[231]=i("_**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[119]||(s[119]=[i("业务逻辑和交互逻辑的混用",-1)])),_:1,__:[119]}),s[232]||(s[232]=i("**_**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[120]||(s[120]=[i("。",-1)])),_:1,__:[120]}),s[233]||(s[233]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[121]||(s[121]=[i("混用之后的后果,就是我们进行维护的时候, 需要查看的变量或者说字段就成倍的增加, 交互变量和业务变量交织在一起. 这部分的代码",-1)])),_:1,__:[121]}),s[234]||(s[234]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[122]||(s[122]=[i("同时承载了",-1)])),_:1,__:[122]}),s[235]||(s[235]=i("**_**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[123]||(s[123]=[i("业务逻辑和交互逻辑",-1)])),_:1,__:[123]}),s[236]||(s[236]=i("**_",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[124]||(s[124]=[i(" 意大利面。",-1)])),_:1,__:[124]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[125]||(s[125]=[i("所以我们就需要将业务逻辑和交互逻辑给拆开. 如下:",-1)])),_:1,__:[125]}),s[237]||(s[237]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[126]||(s[126]=[i("其中 ishow 和 type 就可以视为 UI 变量, 它们不关心外界是通过了什么样的逻辑，什么样的判断, 只关系传进来的是 true 还是 false。这就是很简单的将业务逻辑和交互逻辑拆开。",-1)])),_:1,__:[126]}),t("h3",f,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[127]||(s[127]=[i("1.4 对于单个业务组件我们的理想模型",-1)])),_:1,__:[127]}),s[128]||(s[128]=i()),s[129]||(s[129]=t("a",{class:"header-anchor",href:"#_1-4-对于单个业务组件我们的理想模型","aria-label":"Permalink to “1.4 对于单个业务组件我们的理想模型”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[130]||(s[130]=[i("我们根据“角色”或“用途”分为通用型组件和业务型组件，通用型组件对于我们项目而言就是 element ui。所以我们主要面对的是业务型组件。",-1)])),_:1,__:[130]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[131]||(s[131]=[i("由此我们可以得到基于 composition api 可以得出业务型组件理想的模型如下：",-1)])),_:1,__:[131]}),s[238]||(s[238]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006140505-9ec2d28e-7a8a-4218-8a55-71bb1d52656f.png",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[132]||(s[132]=[i("依旧是 A B C 三个组件.但是 A B C 三个组件外边飘的那些箭头不存在了. 所有能够控制它们的内部状态的方式都集中 在了",-1)])),_:1,__:[132]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[133]||(s[133]=[i("hooks",-1)])),_:1,__:[133]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[134]||(s[134]=[i("上面.",-1)])),_:1,__:[134]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[135]||(s[135]=[i("其中",-1)])),_:1,__:[135]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[136]||(s[136]=[i("hooks",-1)])),_:1,__:[136]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[137]||(s[137]=[i("部分的组织形式和 vue 的",-1)])),_:1,__:[137]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[138]||(s[138]=[i("composition api",-1)])),_:1,__:[138]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[139]||(s[139]=[i("宣传图表现一致，每一个颜色对应一个 Hook，就是图上面的 void。",-1)])),_:1,__:[139]}),s[239]||(s[239]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006140528-f6b8b4c2-1e0c-4dc5-b6fb-57e38071898b.png",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[140]||(s[140]=[i("也就是说,控制 C 组件内部状态的是通过引入到 A 组件中的",-1)])),_:1,__:[140]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[141]||(s[141]=[i("controller",-1)])),_:1,__:[141]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[142]||(s[142]=[i("来进行通过,中间的 B 组件不做任何的处理,仅仅作为一个中转站。",-1)])),_:1,__:[142]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[143]||(s[143]=[i("但是在维护起来的时候还是挺灾难的，比如淡蓝色的那个色块代表的功能。我想要完整的理清楚它的逻辑，需要「上下反复横跳」，类似的事情我已经经历过好多次了。",-1)])),_:1,__:[143]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[144]||(s[144]=[i("组件化好似“搭积木”；“分而治之”思想实际运用，所谓“大事化小，小事化了”或称为“抽象隔离”。就是，各个组件之间有自己需要解决的问题，有各自解决的方式方法，但互相 不需要知道，它们沟通只看“结果”即 props，events/emit。",-1)])),_:1,__:[144]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[145]||(s[145]=[i("下面我通过一个实际的业务场景来描述。",-1)])),_:1,__:[145]}),t("h2",C,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[146]||(s[146]=[i("二、实际的例子",-1)])),_:1,__:[146]}),s[147]||(s[147]=i()),s[148]||(s[148]=t("a",{class:"header-anchor",href:"#二、实际的例子","aria-label":"Permalink to “二、实际的例子”"},"​",-1))]),s[240]||(s[240]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006144434-75ce3f68-9c73-4263-af64-dc98671d048f.png",alt:""})],-1)),t("h3",_,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[149]||(s[149]=[i("2.1 数据流向",-1)])),_:1,__:[149]}),s[150]||(s[150]=i()),s[151]||(s[151]=t("a",{class:"header-anchor",href:"#_2-1-数据流向","aria-label":"Permalink to “2.1 数据流向”"},"​",-1))]),s[241]||(s[241]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/654315/1704006306543-1518f8a4-b8c6-4cdc-bb27-79acfb902f85.png",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[152]||(s[152]=[i("它由两部分构成:",-1)])),_:1,__:[152]}),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[153]||(s[153]=[i("组件的模块",-1)])),_:1,__:[153]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[154]||(s[154]=[i("组件之间的控制关系",-1)])),_:1,__:[154]})])]),t("h3",A,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[155]||(s[155]=[i("2.2 目录结构",-1)])),_:1,__:[155]}),s[156]||(s[156]=i()),s[157]||(s[157]=t("a",{class:"header-anchor",href:"#_2-2-目录结构","aria-label":"Permalink to “2.2 目录结构”"},"​",-1))]),s[242]||(s[242]=p("",1)),t("h4",D,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[158]||(s[158]=[i("index.tsx",-1)])),_:1,__:[158]}),s[159]||(s[159]=i()),s[160]||(s[160]=t("a",{class:"header-anchor",href:"#index-tsx","aria-label":"Permalink to “index.tsx”"},"​",-1))]),s[243]||(s[243]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[161]||(s[161]=[i("很清晰的代码结构和逻辑。一个变量都没有，但是通过函数就可以把这一块业务有的功能都给描述清楚了。",-1)])),_:1,__:[161]}),t("h3",m,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[162]||(s[162]=[i("2.3 ModalEdit",-1)])),_:1,__:[162]}),s[163]||(s[163]=i()),s[164]||(s[164]=t("a",{class:"header-anchor",href:"#_2-3-modaledit","aria-label":"Permalink to “2.3 ModalEdit”"},"​",-1))]),s[244]||(s[244]=p("",1)),t("h3",B,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[165]||(s[165]=[i("2.4 权限控制例子",-1)])),_:1,__:[165]}),s[166]||(s[166]=i()),s[167]||(s[167]=t("a",{class:"header-anchor",href:"#_2-4-权限控制例子","aria-label":"Permalink to “2.4 权限控制例子”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[168]||(s[168]=[i("颗粒度最小的一个例子：",-1)])),_:1,__:[168]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[169]||(s[169]=[i("此处放流程图：",-1)])),_:1,__:[169]}),s[245]||(s[245]=t("p",null,[t("img",{src:"",alt:""})],-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[170]||(s[170]=[i("其中最重要的就是拆分好受控组件和非受控组件。",-1)])),_:1,__:[170]}),s[246]||(s[246]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[171]||(s[171]=[i("以 UI 变量来拆分组件。",-1)])),_:1,__:[171]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[172]||(s[172]=[i("ButtonAuth",-1)])),_:1,__:[172]}),l(a,{style:{color:"rgb(0, 0, 0)"}}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[173]||(s[173]=[i("vue 还是 tsx 无所谓。",-1)])),_:1,__:[173]}),s[247]||(s[247]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[174]||(s[174]=[i("用一个 useButtonAuth 来统一控制",-1)])),_:1,__:[174]}),s[248]||(s[248]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[175]||(s[175]=[i("此外还需要一个常量文件",-1)])),_:1,__:[175]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[176]||(s[176]=[i("constant.ts",-1)])),_:1,__:[176]}),s[249]||(s[249]=p("",1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[177]||(s[177]=[i("为什么不 vuex 直接控制到组件这里呢？就是为了让我的思维产生定式。后期需要维护的时候，我们第一时间联想到的就是找对应的 hooks，而不是翻阅好几个文件。这就是规范。规范有什么用，就是降低我维护代码的心智负担。",-1)])),_:1,__:[177]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[178]||(s[178]=[i("可能我说得还不够清晰，这个是我们的项目地址。技术栈是 vue3 + hook + ts + jsx",-1)])),_:1,__:[178]}),t("h2",v,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[179]||(s[179]=[i("三、持续的优化",-1)])),_:1,__:[179]}),s[180]||(s[180]=i()),s[181]||(s[181]=t("a",{class:"header-anchor",href:"#三、持续的优化","aria-label":"Permalink to “三、持续的优化”"},"​",-1))]),t("h3",T,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[182]||(s[182]=[i("3.1 有了 setup 就足够了么？",-1)])),_:1,__:[182]}),s[183]||(s[183]=i()),s[184]||(s[184]=t("a",{class:"header-anchor",href:"#_3-1-有了-setup-就足够了么","aria-label":"Permalink to “3.1 有了 setup 就足够了么？”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[185]||(s[185]=[i("代码终究是要人来写的，起码现在还是。而且一个项目，像我们这样的长期项目，经历过了多批开发人员的项目，不过你前期写得再怎么好，它随着时间的积累，还是会乱的。我们前期的架子只能延缓这个过程。",-1)])),_:1,__:[185]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[186]||(s[186]=[i("在我们实际开发中，某一个功能（业务）逻辑真的很复杂时，聚合度很高，可能一个 API 中有许多的状态，许多的 computed，用到了多个的生命周期钩子函数。如果真的因为某些无法明确的原因将其拆分，或许你真的该考虑下在代码中自行添加一些 Options API 式的注释，它们用于标出用途还是很立竿见影的（返祖 ）。",-1)])),_:1,__:[186]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[187]||(s[187]=[i("这一块是用于 created 的，这一块是用于 methods 的。",-1)])),_:1,__:[187]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[188]||(s[188]=[i("所以说，在我看来，composition api 的带来并没有真正的解决任何问题。代码的质量真正还是取决于使用它的这个人，这个人对于软件工程的理解深度。",-1)])),_:1,__:[188]}),t("h3",x,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[189]||(s[189]=[i("3.2 持续的优化和阶段性的重构才是根本",-1)])),_:1,__:[189]}),s[190]||(s[190]=i()),s[191]||(s[191]=t("a",{class:"header-anchor",href:"#_3-2-持续的优化和阶段性的重构才是根本","aria-label":"Permalink to “3.2 持续的优化和阶段性的重构才是根本”"},"​",-1))]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[192]||(s[192]=[i("持续的优化和阶段性的重构才是保证代码质量的有力工具。",-1)])),_:1,__:[192]}),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[193]||(s[193]=[i("当碰到这里用的代码别的地方也用到的时候",-1)])),_:1,__:[193]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[194]||(s[194]=[i("这个变量出现在好几个地方,被好几个地方都 set 的时候, 而自己搞不懂它们 set 的顺序的时候",-1)])),_:1,__:[194]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[195]||(s[195]=[i("函数复杂到自己看了半天都看不明白的时候",-1)])),_:1,__:[195]})])]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[196]||(s[196]=[i("重构不等于重写，它依然有风险，有关于重构的使用策略是另外的一个话题，我们暂且略过。但是对于我们开发者而言，最重要的是知道什么样的代码需要重构。",-1)])),_:1,__:[196]}),t("ul",null,[t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[197]||(s[197]=[i("技术债是不可避免的。业务飞速发展时，遗留适当技术债可以帮忙业务强占市场。我们的产品一定是各方妥协的产物。客户端操作体验比 WEB 强了这么多，为什么还不将诺亚做成客户端。",-1)])),_:1,__:[197]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[198]||(s[198]=[i("技术债的大小和影响，是个很难量化和说清楚的事情。不论哪种测量方式，都不能只看指标；需要不停地在技术和业务之间做出权衡。正如标题所说，如同“带着镣铐在冰山上跳舞”。",-1)])),_:1,__:[198]})]),t("li",null,[l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[199]||(s[199]=[i("最重要的一点。除了 TL 之外，团队需要培养“还债”的意识，不止开发团队，需要所有利益相关团队对技术债有正确的认识，并形成“还债”的一个氛围和文化。",-1)])),_:1,__:[199]})])]),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[200]||(s[200]=[i("技术债又是另外一个话题。",-1)])),_:1,__:[200]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[201]||(s[201]=[i("最重要的是在保障业务按时完成的情况下，就应该",-1)])),_:1,__:[201]}),s[250]||(s[250]=i("_**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[202]||(s[202]=[i("多尝试,多实践",-1)])),_:1,__:[202]}),s[251]||(s[251]=i("**_",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[203]||(s[203]=[i("。",-1)])),_:1,__:[203]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[204]||(s[204]=[i("最后和大家分享一句话：",-1)])),_:1,__:[204]}),s[252]||(s[252]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[205]||(s[205]=[i("前端是一门手艺活，唯手熟尔。",-1)])),_:1,__:[205]}),s[253]||(s[253]=i("**",-1)),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[206]||(s[206]=[i("与君共勉。",-1)])),_:1,__:[206]}),l(a,{style:{color:"rgb(0, 0, 0)"}},{default:n(()=>s[207]||(s[207]=[i("谢谢大家。",-1)])),_:1,__:[207]})])}const R=k(E,[["render",S]]);export{M as __pageData,R as default};

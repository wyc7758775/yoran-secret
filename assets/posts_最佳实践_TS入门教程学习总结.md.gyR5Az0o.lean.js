import{_ as p,I as t,c as e,o as E,be as l,j as i,J as h,w as k,a}from"./chunks/framework.BhXXfD0-.js";const A=JSON.parse('{"title":"TS 入门","description":"","frontmatter":{},"headers":[],"relativePath":"posts/最佳实践/TS入门教程学习总结.md","filePath":"posts/最佳实践/TS入门教程学习总结.md"}'),r={name:"posts/最佳实践/TS入门教程学习总结.md"};function d(g,s,y,F,o,c){const n=t("font");return E(),e("div",null,[s[9]||(s[9]=l("",18)),i("ul",null,[s[1]||(s[1]=i("li",null,[i("p",null,"范型的难点？"),i("ul",null,[i("li",null,"主动赋值"),i("li",null,"自动推导")])],-1)),i("li",null,[h(n,{style:{color:"rgb(37, 41, 51)"}},{default:k(()=>s[0]||(s[0]=[a("类型声明的概念",-1)])),_:1,__:[0]})])]),s[10]||(s[10]=i("p",null,":::tips",-1)),s[11]||(s[11]=i("ol",null,[i("li",null,[a("专门指 "),i("code",null,"xxxx.d.ts"),a("这样的文件")])],-1)),s[12]||(s[12]=i("p",null,":::",-1)),s[13]||(s[13]=i("h3",{id:"团队使用-ts-是否会增加人力成本",tabindex:"-1"},[a("团队使用 TS 是否会增加人力成本？ "),i("a",{class:"header-anchor",href:"#团队使用-ts-是否会增加人力成本","aria-label":"Permalink to “团队使用 TS 是否会增加人力成本？”"},"​")],-1)),s[14]||(s[14]=i("h2",{id:"三、-js-迁移-ts",tabindex:"-1"},[a("三、 JS 迁移 TS "),i("a",{class:"header-anchor",href:"#三、-js-迁移-ts","aria-label":"Permalink to “三、 JS 迁移 TS”"},"​")],-1)),i("ul",null,[s[3]||(s[3]=i("li",null,"不要对逻辑进行重构，最多写一个 TODO。即便你看这一部分再不顺眼也是这样。",-1)),i("li",null,[h(n,{style:{color:"rgb(37, 41, 51)"}},{default:k(()=>s[2]||(s[2]=[a("更加不要发生技术栈的替换，只做类型包的补充。",-1)])),_:1,__:[2]})])]),i("blockquote",null,[h(n,{style:{color:"rgb(37, 41, 51)"}},{default:k(()=>s[4]||(s[4]=[a("在迁移过程中的一个大忌就是，你明明只应该补充下类型，却觉得原来的逻辑不顺眼直接顺手改掉了，或者感觉使用的 npm 包太老，顺手替换了个更潮流的包。千万不要这么做！否则如果迁移过程中哪里出现了问题，为了定位问题根源，大概率你又要将它们回退回去，甚至包括一些无辜的类型代码...，简直就是在给你自己增加工作量了。",-1)])),_:1,__:[4]})]),s[15]||(s[15]=l("",10)),i("p",null,[s[6]||(s[6]=a("全部都是使用 ",-1)),s[7]||(s[7]=i("code",null,"xxx.d.ts",-1)),s[8]||(s[8]=a("的组成。有了这些文件，我们就可以消除 ",-1)),h(n,{style:{"background-color":"#FBDE28"}},{default:k(()=>s[5]||(s[5]=[a("无法找到模块的相关报错。",-1)])),_:1,__:[5]})]),s[16]||(s[16]=l("",15))])}const D=p(r,[["render",d]]);export{A as __pageData,D as default};
